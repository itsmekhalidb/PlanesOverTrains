# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\ryanr\Documents\SchoolStuff\Fall2023\ECE_1140\Track_Controller_SW.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import uic

from api.ctc_track_controller_api import CTCTrackControllerAPI
from api.track_controller_track_model_api import TrackControllerTrackModelAPI
from track_controller.track_controller import Track_Controller
from track_controller.Track_Controller_TB import Ui_TrackController_Testbench
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *

QtWidgets.QApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling, True)
import time
import sys


class Ui_TrackController_MainUI(QMainWindow):
    def __init__(self, track_controller: Track_Controller):
        super().__init__()
        self.track_controller = track_controller
        self.setupUi()
        self.show()

    def open_window(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_TrackController_Testbench(self.track_controller)
        self.ui.setupUi(self.window)
        self.window.show()

    def browse_files(self):
        browse = QFileDialog.getOpenFileName(self.load_PLC_btn)
        print("Loading PLC: " + browse[0])
        data = browse[0]
        self.track_controller.set_plc_input(self.wayside_ctrl_comboBox.currentText(), data)

    def setupUi(self):
        self.setObjectName("Track Controller")
        self.resize(987, 610)
        self.wayside_ctrl_comboBox = QtWidgets.QComboBox(self)
        self.wayside_ctrl_comboBox.setGeometry(QtCore.QRect(380, 60, 191, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.wayside_ctrl_comboBox.setFont(font)
        self.wayside_ctrl_comboBox.setObjectName("wayside_ctrl_comboBox")
        self.wayside_ctrl_comboBox.addItem("")
        self.testbench = QtWidgets.QPushButton(self, clicked=lambda: self.open_window())
        self.testbench.setGeometry(QtCore.QRect(586, 10, 82, 28))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.testbench.setFont(font)
        self.testbench.setObjectName("testbench")
        self.manual_mode_checkBox = QtWidgets.QCheckBox(self)
        self.manual_mode_checkBox.setGeometry(QtCore.QRect(70, 70, 138, 17))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.manual_mode_checkBox.setFont(font)
        self.manual_mode_checkBox.setTristate(False)
        self.manual_mode_checkBox.setObjectName("manual_mode_checkBox")
        # self.authority_label = QtWidgets.QLabel(self)
        # self.authority_label.setGeometry(QtCore.QRect(400, 20, 142, 31))
        # font = QtGui.QFont()
        # font.setPointSize(12)
        # self.authority_label.setFont(font)
        # self.authority_label.setObjectName("authority_label")
        self.commanded_speed_label = QtWidgets.QLabel(self)
        self.commanded_speed_label.setGeometry(QtCore.QRect(26, 317, 142, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.commanded_speed_label.setFont(font)
        self.commanded_speed_label.setObjectName("commanded_speed_label")
        self.occupied_blocks = QtWidgets.QListWidget(self)
        self.occupied_blocks.setGeometry(QtCore.QRect(28, 391, 256, 192))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.occupied_blocks.setFont(font)
        # self.occupied_blocks.setselfShape(QtWidgets.Qself.Box)
        # self.occupied_blocks.setselfShadow(QtWidgets.Qself.Plain)
        self.occupied_blocks.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.occupied_blocks.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.occupied_blocks.setObjectName("occupied_blocks")
        self.occupied_blocks_label = QtWidgets.QLabel(self)
        self.occupied_blocks_label.setGeometry(QtCore.QRect(28, 370, 256, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.occupied_blocks_label.setFont(font)
        self.occupied_blocks_label.setAlignment(QtCore.Qt.AlignCenter)
        self.occupied_blocks_label.setObjectName("occupied_blocks_label")
        self.title_label = QtWidgets.QLabel(self)
        self.title_label.setGeometry(QtCore.QRect(0, -1, 987, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.title_label.setFont(font)
        self.title_label.setAutoFillBackground(False)
        self.title_label.setStyleSheet("background-color: rgb(255, 255, 0);\n"
                                       "border: 3px solid black;")
        self.title_label.setObjectName("title_label")
        self.sys_time_label = QtWidgets.QLabel(self)
        self.sys_time_label.setGeometry(QtCore.QRect(683, 8, 83, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sys_time_label.setFont(font)
        self.sys_time_label.setStyleSheet("border: 1px solid black;\n"
                                          "background-color: rgb(255, 255, 255);")
        self.sys_time_label.setObjectName("sys_time_label")
        self.system_speed_label = QtWidgets.QLabel(self)
        self.system_speed_label.setGeometry(QtCore.QRect(782, 9, 169, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.system_speed_label.setFont(font)
        self.system_speed_label.setAutoFillBackground(False)
        self.system_speed_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                              "border: 1px solid black;")
        self.system_speed_label.setObjectName("system_speed_label")
        self.system_speed_spinBox = QtWidgets.QDoubleSpinBox(self)
        self.system_speed_spinBox.setGeometry(QtCore.QRect(886, 13, 62, 22))
        self.system_speed_spinBox.setObjectName("system_speed_spinBox")
        self.light_color = QtWidgets.QTextBrowser(self)
        self.light_color.setGeometry(QtCore.QRect(349, 126, 242, 457))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.light_color.setFont(font)
        # self.light_color.setselfShape(QtWidgets.Qself.Box)
        # self.light_color.setselfShadow(QtWidgets.Qself.Plain)
        self.light_color.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.light_color.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.light_color.setObjectName("light_color")
        self.light_color_label = QtWidgets.QLabel(self)
        self.light_color_label.setGeometry(QtCore.QRect(331, 105, 301, 19))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.light_color_label.setFont(font)
        self.light_color_label.setAlignment(QtCore.Qt.AlignCenter)
        self.light_color_label.setObjectName("light_color_label")
        self.traffic_light_green = QtWidgets.QLabel(self)
        self.traffic_light_green.setEnabled(True)
        self.traffic_light_green.setGeometry(QtCore.QRect(532, 142, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green.setFont(font)
        self.traffic_light_green.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(0, 170, 0);")
        self.traffic_light_green.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green.setObjectName("traffic_light_green")
        self.traffic_light_red = QtWidgets.QLabel(self)
        self.traffic_light_red.setEnabled(True)
        self.traffic_light_red.setGeometry(QtCore.QRect(482, 142, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red.setFont(font)
        self.traffic_light_red.setStyleSheet("color: rgb(255, 255, 255);\n"
                                             "background-color: rgb(170, 0, 0);")
        self.traffic_light_red.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red.setObjectName("traffic_light_red")
        self.traffic_light_label = QtWidgets.QLabel(self)
        self.traffic_light_label.setGeometry(QtCore.QRect(362, 142, 117, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label.setFont(font)
        self.traffic_light_label.setObjectName("traffic_light_label")
        self.traffic_light_label_2 = QtWidgets.QLabel(self)
        self.traffic_light_label_2.setGeometry(QtCore.QRect(362, 182, 47, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_2.setFont(font)
        self.traffic_light_label_2.setObjectName("traffic_light_label_2")
        self.traffic_light_label_4 = QtWidgets.QLabel(self)
        self.traffic_light_label_4.setGeometry(QtCore.QRect(362, 262, 82, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_4.setFont(font)
        self.traffic_light_label_4.setObjectName("traffic_light_label_4")
        self.traffic_light_label_3 = QtWidgets.QLabel(self)
        self.traffic_light_label_3.setGeometry(QtCore.QRect(362, 222, 72, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_3.setFont(font)
        self.traffic_light_label_3.setObjectName("traffic_light_label_3")
        self.traffic_light_label_8 = QtWidgets.QLabel(self)
        self.traffic_light_label_8.setGeometry(QtCore.QRect(362, 422, 47, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_8.setFont(font)
        self.traffic_light_label_8.setObjectName("traffic_light_label_8")
        self.traffic_light_label_6 = QtWidgets.QLabel(self)
        self.traffic_light_label_6.setGeometry(QtCore.QRect(362, 342, 47, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_6.setFont(font)
        self.traffic_light_label_6.setObjectName("traffic_light_label_6")
        self.traffic_light_label_7 = QtWidgets.QLabel(self)
        self.traffic_light_label_7.setGeometry(QtCore.QRect(362, 382, 47, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_7.setFont(font)
        self.traffic_light_label_7.setObjectName("traffic_light_label_7")
        self.traffic_light_label_5 = QtWidgets.QLabel(self)
        self.traffic_light_label_5.setGeometry(QtCore.QRect(362, 302, 81, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_5.setFont(font)
        self.traffic_light_label_5.setObjectName("traffic_light_label_5")
        self.traffic_light_label_11 = QtWidgets.QLabel(self)
        self.traffic_light_label_11.setGeometry(QtCore.QRect(362, 542, 74, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_11.setFont(font)
        self.traffic_light_label_11.setObjectName("traffic_light_label_11")
        self.traffic_light_label_9 = QtWidgets.QLabel(self)
        self.traffic_light_label_9.setGeometry(QtCore.QRect(362, 462, 47, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_9.setFont(font)
        self.traffic_light_label_9.setObjectName("traffic_light_label_9")
        self.traffic_light_label_10 = QtWidgets.QLabel(self)
        self.traffic_light_label_10.setGeometry(QtCore.QRect(362, 502, 47, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_label_10.setFont(font)
        self.traffic_light_label_10.setObjectName("traffic_light_label_10")
        # self.railway_crossing_checkBox = QtWidgets.QCheckBox(self)
        # self.railway_crossing_checkBox.setGeometry(QtCore.QRect(25, 277, 140, 22))
        # font = QtGui.QFont()
        # font.setPointSize(12)
        # self.railway_crossing_checkBox.setFont(font)
        # self.railway_crossing_checkBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        # self.railway_crossing_checkBox.setObjectName("railway_crossing_checkBox")
        self.railway_crossing_label = QtWidgets.QLabel(self)
        self.railway_crossing_label.setGeometry(QtCore.QRect(25, 277, 150, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.railway_crossing_label.setFont(font)
        self.railway_crossing_label.setObjectName("railway_crossing_label")
        self.railway_crossing = QtWidgets.QLabel(self)
        self.railway_crossing.setEnabled(True)
        self.railway_crossing.setGeometry(QtCore.QRect(200, 277, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.railway_crossing.setFont(font)
        self.railway_crossing.setStyleSheet("color: rgb(0, 0, 0);\n"
                                            "background-color: rgb(255, 255, 0);")
        self.railway_crossing.setAlignment(QtCore.Qt.AlignCenter)
        self.railway_crossing.setObjectName("traffic_light_red")
        self.toggle_railway = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_railway_crossing(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.railway_crossing.text(),
            not self.track_controller.get_railway_crossing(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                           self.railway_crossing.text())))
        self.toggle_railway.setGeometry(QtCore.QRect(260, 277, 51, 23))
        self.toggle_railway.setObjectName("toggle_switch1")
        self.toggle_railway.setCheckable(True)
        self.load_PLC_btn = QtWidgets.QPushButton(self, clicked=lambda: self.browse_files())
        self.load_PLC_btn.setGeometry(QtCore.QRect(754, 63, 102, 28))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.load_PLC_btn.setFont(font)
        self.load_PLC_btn.setObjectName("load_PLC_btn")
        self.switch_position = QtWidgets.QTextBrowser(self)
        self.switch_position.setGeometry(QtCore.QRect(29, 126, 256, 125))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.switch_position.setFont(font)
        # self.switch_position.setselfShape(QtWidgets.Qself.Box)
        # self.switch_position.setselfShadow(QtWidgets.Qself.Plain)
        self.switch_position.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.switch_position.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.switch_position.setObjectName("switch_position")
        self.switch_position_label = QtWidgets.QLabel(self)
        self.switch_position_label.setGeometry(QtCore.QRect(29, 105, 256, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.switch_position_label.setFont(font)
        self.switch_position_label.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_label.setObjectName("switch_position_label")
        self.switch_position_left = QtWidgets.QLabel(self)
        self.switch_position_left.setEnabled(True)
        self.switch_position_left.setGeometry(QtCore.QRect(183, 132, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.switch_position_left.setFont(font)
        self.switch_position_left.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(170, 0, 0);")
        self.switch_position_left.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_left.setObjectName("switch_position_left")
        self.switch_position_right_2 = QtWidgets.QLabel(self)
        self.switch_position_right_2.setEnabled(True)
        self.switch_position_right_2.setGeometry(QtCore.QRect(233, 170, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.switch_position_right_2.setFont(font)
        self.switch_position_right_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                   "background-color: rgb(0, 170, 0);")
        self.switch_position_right_2.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_right_2.setObjectName("switch_position_right_2")
        self.switch_position_left_3 = QtWidgets.QLabel(self)
        self.switch_position_left_3.setEnabled(True)
        self.switch_position_left_3.setGeometry(QtCore.QRect(183, 208, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.switch_position_left_3.setFont(font)
        self.switch_position_left_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(170, 0, 0);")
        self.switch_position_left_3.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_left_3.setObjectName("switch_position_left_3")
        self.switch_position_right_3 = QtWidgets.QLabel(self)
        self.switch_position_right_3.setEnabled(True)
        self.switch_position_right_3.setGeometry(QtCore.QRect(233, 208, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.switch_position_right_3.setFont(font)
        self.switch_position_right_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                   "background-color: rgb(0, 170, 0);")
        self.switch_position_right_3.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_right_3.setObjectName("switch_position_right_3")
        self.switch_position_left_2 = QtWidgets.QLabel(self)
        self.switch_position_left_2.setEnabled(True)
        self.switch_position_left_2.setGeometry(QtCore.QRect(183, 170, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.switch_position_left_2.setFont(font)
        self.switch_position_left_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(170, 0, 0);")
        self.switch_position_left_2.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_left_2.setObjectName("switch_position_left_2")
        self.switch_position_right = QtWidgets.QLabel(self)
        self.switch_position_right.setEnabled(True)
        self.switch_position_right.setGeometry(QtCore.QRect(233, 132, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.switch_position_right.setFont(font)
        self.switch_position_right.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.switch_position_right.setAlignment(QtCore.Qt.AlignCenter)
        self.switch_position_right.setObjectName("switch_position_right")
        self.switch_label_2 = QtWidgets.QLabel(self)
        self.switch_label_2.setGeometry(QtCore.QRect(42, 170, 70, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.switch_label_2.setFont(font)
        self.switch_label_2.setObjectName("switch_label_2")
        self.switch_label_3 = QtWidgets.QLabel(self)
        self.switch_label_3.setGeometry(QtCore.QRect(42, 208, 88, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.switch_label_3.setFont(font)
        self.switch_label_3.setObjectName("switch_label_3")
        self.switch_label_1 = QtWidgets.QLabel(self)
        self.switch_label_1.setGeometry(QtCore.QRect(42, 132, 117, 26))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.switch_label_1.setFont(font)
        self.switch_label_1.setObjectName("switch_label_1")
        self.PLC_output_label = QtWidgets.QLabel(self)
        self.PLC_output_label.setGeometry(QtCore.QRect(685, 106, 256, 16))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.PLC_output_label.setFont(font)
        self.PLC_output_label.setAlignment(QtCore.Qt.AlignCenter)
        self.PLC_output_label.setObjectName("PLC_output_label")
        self.PLC_output = QtWidgets.QListWidget(self)
        self.PLC_output.setGeometry(QtCore.QRect(670, 127, 289, 453))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.PLC_output.setFont(font)
        # self.PLC_output.setselfShape(QtWidgets.Qself.Box)
        # self.PLC_output.setselfShadow(QtWidgets.Qself.Plain)
        self.PLC_output.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.PLC_output.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.PLC_output.setObjectName("PLC_output")
        self.traffic_light_red_2 = QtWidgets.QLabel(self)
        self.traffic_light_red_2.setEnabled(True)
        self.traffic_light_red_2.setGeometry(QtCore.QRect(482, 182, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_2.setFont(font)
        self.traffic_light_red_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_2.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_2.setObjectName("traffic_light_red_2")
        self.traffic_light_green_2 = QtWidgets.QLabel(self)
        self.traffic_light_green_2.setEnabled(True)
        self.traffic_light_green_2.setGeometry(QtCore.QRect(532, 182, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_2.setFont(font)
        self.traffic_light_green_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_2.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_2.setObjectName("traffic_light_green_2")
        self.traffic_light_red_3 = QtWidgets.QLabel(self)
        self.traffic_light_red_3.setEnabled(True)
        self.traffic_light_red_3.setGeometry(QtCore.QRect(482, 222, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_3.setFont(font)
        self.traffic_light_red_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_3.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_3.setObjectName("traffic_light_red_3")
        self.traffic_light_green_3 = QtWidgets.QLabel(self)
        self.traffic_light_green_3.setEnabled(True)
        self.traffic_light_green_3.setGeometry(QtCore.QRect(532, 222, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_3.setFont(font)
        self.traffic_light_green_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_3.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_3.setObjectName("traffic_light_green_3")
        self.traffic_light_green_4 = QtWidgets.QLabel(self)
        self.traffic_light_green_4.setEnabled(True)
        self.traffic_light_green_4.setGeometry(QtCore.QRect(532, 262, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_4.setFont(font)
        self.traffic_light_green_4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_4.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_4.setObjectName("traffic_light_green_4")
        self.traffic_light_red_4 = QtWidgets.QLabel(self)
        self.traffic_light_red_4.setEnabled(True)
        self.traffic_light_red_4.setGeometry(QtCore.QRect(482, 262, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_4.setFont(font)
        self.traffic_light_red_4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_4.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_4.setObjectName("traffic_light_red_4")
        self.traffic_light_green_5 = QtWidgets.QLabel(self)
        self.traffic_light_green_5.setEnabled(True)
        self.traffic_light_green_5.setGeometry(QtCore.QRect(532, 302, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_5.setFont(font)
        self.traffic_light_green_5.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_5.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_5.setObjectName("traffic_light_green_5")
        self.traffic_light_red_5 = QtWidgets.QLabel(self)
        self.traffic_light_red_5.setEnabled(True)
        self.traffic_light_red_5.setGeometry(QtCore.QRect(482, 302, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_5.setFont(font)
        self.traffic_light_red_5.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_5.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_5.setObjectName("traffic_light_red_5")
        self.traffic_light_green_6 = QtWidgets.QLabel(self)
        self.traffic_light_green_6.setEnabled(True)
        self.traffic_light_green_6.setGeometry(QtCore.QRect(532, 342, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_6.setFont(font)
        self.traffic_light_green_6.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_6.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_6.setObjectName("traffic_light_green_6")
        self.traffic_light_red_6 = QtWidgets.QLabel(self)
        self.traffic_light_red_6.setEnabled(True)
        self.traffic_light_red_6.setGeometry(QtCore.QRect(482, 342, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_6.setFont(font)
        self.traffic_light_red_6.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_6.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_6.setObjectName("traffic_light_red_6")
        self.traffic_light_green_7 = QtWidgets.QLabel(self)
        self.traffic_light_green_7.setEnabled(True)
        self.traffic_light_green_7.setGeometry(QtCore.QRect(532, 382, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_7.setFont(font)
        self.traffic_light_green_7.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_7.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_7.setObjectName("traffic_light_green_7")
        self.traffic_light_red_7 = QtWidgets.QLabel(self)
        self.traffic_light_red_7.setEnabled(True)
        self.traffic_light_red_7.setGeometry(QtCore.QRect(482, 382, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_7.setFont(font)
        self.traffic_light_red_7.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_7.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_7.setObjectName("traffic_light_red_7")
        self.traffic_light_green_8 = QtWidgets.QLabel(self)
        self.traffic_light_green_8.setEnabled(True)
        self.traffic_light_green_8.setGeometry(QtCore.QRect(532, 422, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_8.setFont(font)
        self.traffic_light_green_8.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_8.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_8.setObjectName("traffic_light_green_8")
        self.traffic_light_red_8 = QtWidgets.QLabel(self)
        self.traffic_light_red_8.setEnabled(True)
        self.traffic_light_red_8.setGeometry(QtCore.QRect(482, 422, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_8.setFont(font)
        self.traffic_light_red_8.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_8.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_8.setObjectName("traffic_light_red_8")
        self.traffic_light_green_9 = QtWidgets.QLabel(self)
        self.traffic_light_green_9.setEnabled(True)
        self.traffic_light_green_9.setGeometry(QtCore.QRect(532, 462, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_9.setFont(font)
        self.traffic_light_green_9.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                 "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_9.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_9.setObjectName("traffic_light_green_9")
        self.traffic_light_red_9 = QtWidgets.QLabel(self)
        self.traffic_light_red_9.setEnabled(True)
        self.traffic_light_red_9.setGeometry(QtCore.QRect(482, 462, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_9.setFont(font)
        self.traffic_light_red_9.setStyleSheet("color: rgb(255, 255, 255);\n"
                                               "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_9.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_9.setObjectName("traffic_light_red_9")
        self.traffic_light_green_10 = QtWidgets.QLabel(self)
        self.traffic_light_green_10.setEnabled(True)
        self.traffic_light_green_10.setGeometry(QtCore.QRect(532, 502, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_10.setFont(font)
        self.traffic_light_green_10.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_10.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_10.setObjectName("traffic_light_green_10")
        self.traffic_light_red_10 = QtWidgets.QLabel(self)
        self.traffic_light_red_10.setEnabled(True)
        self.traffic_light_red_10.setGeometry(QtCore.QRect(482, 502, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_10.setFont(font)
        self.traffic_light_red_10.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_10.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_10.setObjectName("traffic_light_red_10")
        self.traffic_light_green_11 = QtWidgets.QLabel(self)
        self.traffic_light_green_11.setEnabled(True)
        self.traffic_light_green_11.setGeometry(QtCore.QRect(532, 542, 42, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_green_11.setFont(font)
        self.traffic_light_green_11.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                  "background-color: rgb(0, 170, 0);")
        self.traffic_light_green_11.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_green_11.setObjectName("traffic_light_green_11")
        self.traffic_light_red_11 = QtWidgets.QLabel(self)
        self.traffic_light_red_11.setEnabled(True)
        self.traffic_light_red_11.setGeometry(QtCore.QRect(482, 542, 35, 26))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.traffic_light_red_11.setFont(font)
        self.traffic_light_red_11.setStyleSheet("color: rgb(255, 255, 255);\n"
                                                "background-color: rgb(170, 0, 0);")
        self.traffic_light_red_11.setAlignment(QtCore.Qt.AlignCenter)
        self.traffic_light_red_11.setObjectName("traffic_light_red_11")
        self.commanded_speed = QtWidgets.QLabel(self)
        self.commanded_speed.setGeometry(QtCore.QRect(199, 322, 42, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.commanded_speed_label.setFont(font)
        self.commanded_speed.setObjectName("commanded_speed")
        self.toggle_switch1 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_switch(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_1.text(),
            not self.track_controller.get_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                 self.switch_label_1.text())))
        self.toggle_switch1.setGeometry(QtCore.QRect(291, 133, 51, 23))
        self.toggle_switch1.setObjectName("toggle_switch1")
        self.toggle_switch1.setCheckable(True)
        self.toggle_switch2 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_switch(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_2.text(),
            not self.track_controller.get_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                 self.switch_label_2.text())))
        self.toggle_switch2.setGeometry(QtCore.QRect(290, 171, 51, 23))
        self.toggle_switch2.setObjectName("toggle_switch2")
        self.toggle_switch2.setCheckable(True)
        self.toggle_switch3 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_switch(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_3.text(),
            not self.track_controller.get_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                 self.switch_label_3.text())))
        self.toggle_switch3.setGeometry(QtCore.QRect(290, 211, 51, 23))
        self.toggle_switch3.setObjectName("toggle_switch3")
        self.toggle_switch3.setCheckable(True)
        self.toggle_light = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label.text())))
        self.toggle_light.setGeometry(QtCore.QRect(604, 143, 51, 23))
        self.toggle_light.setObjectName("toggle_light")
        self.toggle_light.setCheckable(True)
        self.toggle_light_2 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_2.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_2.text())))
        self.toggle_light_2.setGeometry(QtCore.QRect(604, 184, 51, 23))
        self.toggle_light_2.setObjectName("toggle_light_2")
        self.toggle_light_2.setCheckable(True)
        self.toggle_light_3 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_3.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_3.text())))
        self.toggle_light_3.setGeometry(QtCore.QRect(605, 225, 51, 23))
        self.toggle_light_3.setObjectName("toggle_light_3")
        self.toggle_light_3.setCheckable(True)
        self.toggle_light_4 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_4.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_4.text())))
        self.toggle_light_4.setGeometry(QtCore.QRect(604, 263, 51, 23))
        self.toggle_light_4.setObjectName("toggle_light_4")
        self.toggle_light_4.setCheckable(True)
        self.toggle_light_5 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_5.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_5.text())))
        self.toggle_light_5.setGeometry(QtCore.QRect(604, 304, 51, 23))
        self.toggle_light_5.setObjectName("toggle_light_5")
        self.toggle_light_5.setCheckable(True)
        self.toggle_light_6 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_6.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_6.text())))
        self.toggle_light_6.setGeometry(QtCore.QRect(604, 344, 51, 23))
        self.toggle_light_6.setObjectName("toggle_light_6")
        self.toggle_light_6.setCheckable(True)
        self.toggle_light_7 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_7.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_7.text())))
        self.toggle_light_7.setGeometry(QtCore.QRect(604, 386, 51, 23))
        self.toggle_light_7.setObjectName("toggle_light_7")
        self.toggle_light_7.setCheckable(True)
        self.toggle_light_8 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_8.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_8.text())))
        self.toggle_light_8.setGeometry(QtCore.QRect(604, 424, 51, 23))
        self.toggle_light_8.setObjectName("toggle_light_8")
        self.toggle_light_8.setCheckable(True)
        self.toggle_light_9 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_9.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_9.text())))
        self.toggle_light_9.setGeometry(QtCore.QRect(604, 462, 51, 23))
        self.toggle_light_9.setObjectName("toggle_light_9")
        self.toggle_light_9.setCheckable(True)
        self.toggle_light_10 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_10.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_10.text())))
        self.toggle_light_10.setGeometry(QtCore.QRect(604, 502, 51, 23))
        self.toggle_light_10.setObjectName("toggle_light_10")
        self.toggle_light_10.setCheckable(True)
        self.toggle_light_11 = QtWidgets.QPushButton(self, clicked=lambda: self.track_controller.set_lights(
            self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_11.text(),
            not self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                self.traffic_light_label_11.text())))
        self.toggle_light_11.setGeometry(QtCore.QRect(604, 544, 51, 23))
        self.toggle_light_11.setObjectName("toggle_light_11")
        self.toggle_light_11.setCheckable(True)

        # self.toggle_switch1.clicked.connect(self.ChangeVisibility)
        # self.toggle_switch2.clicked.connect(self.ChangeVisibility)
        # self.toggle_switch3.clicked.connect(self.ChangeVisibility)

        self.title_label.raise_()
        self.wayside_ctrl_comboBox.raise_()
        # self.testbench.raise_()
        self.manual_mode_checkBox.raise_()
        # self.authority_label.raise_()
        # self.commanded_speed_label.raise_()
        self.occupied_blocks.raise_()
        self.occupied_blocks_label.raise_()
        self.sys_time_label.raise_()
        self.system_speed_label.raise_()
        self.system_speed_spinBox.raise_()
        self.light_color.raise_()
        self.light_color_label.raise_()
        self.traffic_light_green.raise_()
        self.traffic_light_red.raise_()
        self.traffic_light_label.raise_()
        self.traffic_light_label_2.raise_()
        self.traffic_light_label_4.raise_()
        self.traffic_light_label_3.raise_()
        self.traffic_light_label_8.raise_()
        self.traffic_light_label_6.raise_()
        self.traffic_light_label_7.raise_()
        self.traffic_light_label_5.raise_()
        self.traffic_light_label_11.raise_()
        self.traffic_light_label_9.raise_()
        self.traffic_light_label_10.raise_()
        # self.railway_crossing_checkBox.raise_()
        self.railway_crossing_label.raise_()
        self.railway_crossing.raise_()
        self.toggle_railway.raise_()
        self.load_PLC_btn.raise_()
        self.switch_position.raise_()
        self.switch_position_label.raise_()
        self.switch_position_left.raise_()
        self.switch_position_right_2.raise_()
        self.switch_position_left_3.raise_()
        self.switch_position_right_3.raise_()
        self.switch_position_left_2.raise_()
        self.switch_position_right.raise_()
        self.switch_label_2.raise_()
        self.switch_label_3.raise_()
        self.switch_label_1.raise_()
        self.PLC_output_label.raise_()
        self.PLC_output.raise_()
        self.traffic_light_red_2.raise_()
        self.traffic_light_green_2.raise_()
        self.traffic_light_red_3.raise_()
        self.traffic_light_green_3.raise_()
        self.traffic_light_green_4.raise_()
        self.traffic_light_red_4.raise_()
        self.traffic_light_green_5.raise_()
        self.traffic_light_red_5.raise_()
        self.traffic_light_green_6.raise_()
        self.traffic_light_red_6.raise_()
        self.traffic_light_green_7.raise_()
        self.traffic_light_red_7.raise_()
        self.traffic_light_green_8.raise_()
        self.traffic_light_red_8.raise_()
        self.traffic_light_green_9.raise_()
        self.traffic_light_red_9.raise_()
        self.traffic_light_green_10.raise_()
        self.traffic_light_red_10.raise_()
        self.traffic_light_green_11.raise_()
        self.traffic_light_red_11.raise_()
        # self.commanded_speed.raise_()
        self.toggle_switch1.raise_()
        self.toggle_switch2.raise_()
        self.toggle_switch3.raise_()
        self.toggle_light.raise_()
        self.toggle_light_2.raise_()
        self.toggle_light_3.raise_()
        self.toggle_light_4.raise_()
        self.toggle_light_5.raise_()
        self.toggle_light_6.raise_()
        self.toggle_light_7.raise_()
        self.toggle_light_8.raise_()
        self.toggle_light_9.raise_()
        self.toggle_light_10.raise_()
        self.toggle_light_11.raise_()

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

        self._handler()


    def _handler(self):
        self.timer = QTimer()
        self.timer.setInterval(100)  # refreshes every time period
        self.timer.timeout.connect(self.update)
        self.timer.start()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "Track Controller"))
        self.wayside_ctrl_comboBox.setItemText(0, _translate("self", "Green 1"))
        self.wayside_ctrl_comboBox.addItem("Green 2")
        self.wayside_ctrl_comboBox.addItem("Red 1")
        self.wayside_ctrl_comboBox.addItem("Red 2")
        self.testbench.setText(_translate("self", "Testbench"))
        self.manual_mode_checkBox.setText(_translate("self", "Manual Mode"))
        # self.commanded_speed_label.setText(_translate("self", "Commanded Speed"))
        # self.commanded_speed.setText(_translate("self", "70 mph"))
        self.occupied_blocks_label.setText(_translate("self", "Occupied Blocks"))
        self.title_label.setText(_translate("self", "Track Controller"))
        self.sys_time_label.setText(_translate("self", "13:24:55"))
        self.system_speed_label.setText(_translate("self", " System Speed"))
        self.light_color_label.setText(_translate("self", "Light Color"))
        self.traffic_light_green.setText(_translate("self", "Green"))
        self.traffic_light_red.setText(_translate("self", "Red"))
        self.changeWayside()
        self.railway_crossing_label.setText(_translate("self", "Railway Crossing"))
        self.load_PLC_btn.setText(_translate("self", "Load PLC"))
        self.switch_position_label.setText(_translate("self", "Switch Position"))
        self.PLC_output_label.setText(_translate("self", "PLC Output"))
        self.traffic_light_red_2.setText(_translate("self", "Red"))
        self.traffic_light_green_2.setText(_translate("self", "Green"))
        self.traffic_light_red_3.setText(_translate("self", "Red"))
        self.traffic_light_green_3.setText(_translate("self", "Green"))
        self.traffic_light_green_4.setText(_translate("self", "Green"))
        self.traffic_light_red_4.setText(_translate("self", "Red"))
        self.traffic_light_green_5.setText(_translate("self", "Green"))
        self.traffic_light_red_5.setText(_translate("self", "Red"))
        self.traffic_light_green_6.setText(_translate("self", "Green"))
        self.traffic_light_red_6.setText(_translate("self", "Red"))
        self.traffic_light_green_7.setText(_translate("self", "Green"))
        self.traffic_light_red_7.setText(_translate("self", "Red"))
        self.traffic_light_green_8.setText(_translate("self", "Green"))
        self.traffic_light_red_8.setText(_translate("self", "Red"))
        self.traffic_light_green_9.setText(_translate("self", "Green"))
        self.traffic_light_red_9.setText(_translate("self", "Red"))
        self.traffic_light_green_10.setText(_translate("self", "Green"))
        self.traffic_light_red_10.setText(_translate("self", "Red"))
        self.traffic_light_green_11.setText(_translate("self", "Green"))
        self.traffic_light_red_11.setText(_translate("self", "Red"))
        self.toggle_switch1.setText(_translate("self", "Toggle"))
        self.toggle_switch2.setText(_translate("self", "Toggle"))
        self.toggle_switch3.setText(_translate("self", "Toggle"))
        self.toggle_light.setText(_translate("self", "Toggle"))
        self.toggle_light_2.setText(_translate("self", "Toggle"))
        self.toggle_light_3.setText(_translate("self", "Toggle"))
        self.toggle_light_4.setText(_translate("self", "Toggle"))
        self.toggle_light_5.setText(_translate("self", "Toggle"))
        self.toggle_light_6.setText(_translate("self", "Toggle"))
        self.toggle_light_7.setText(_translate("self", "Toggle"))
        self.toggle_light_8.setText(_translate("self", "Toggle"))
        self.toggle_light_9.setText(_translate("self", "Toggle"))
        self.toggle_light_10.setText(_translate("self", "Toggle"))
        self.toggle_light_11.setText(_translate("self", "Toggle"))
        self.toggle_railway.setText(_translate("self", "Toggle"))

    def update(self):
        _translate = QtCore.QCoreApplication.translate
        temp_time = self.track_controller.get_time()
        hr = str(temp_time.hour)
        minute = str(temp_time.minute)
        sec = str(temp_time.second)
        if len(hr) == 1:
            hr = "0" + hr
        if len(minute) == 1:
            minute = "0" + minute
        if len(sec) == 1:
            sec = "0" + sec
        temp_timestr = hr + ":" + minute + ":" + sec

        self.occupied_blocks.clear()
        self.PLC_output.clear()
        if self.wayside_ctrl_comboBox.currentText() == 'Green 1' or self.wayside_ctrl_comboBox.currentText() == 'Green 2':
            self.occupied_blocks.addItems(self.track_controller.get_occupied_blocks("Green"))
        elif self.wayside_ctrl_comboBox.currentText() == 'Red 1' or self.wayside_ctrl_comboBox.currentText() == 'Red 2':
            self.occupied_blocks.addItems(self.track_controller.get_occupied_blocks("Red"))

        # if self.track_controller.get_automatic():
        #     self.PLC_output.addItems(self.track_controller.get_plc_output(self.wayside_ctrl_comboBox.currentText()))
        if self.track_controller.get_automatic():
            temp = self.track_controller.get_plc_output(self.wayside_ctrl_comboBox.currentText())
            for i in range(0, len(temp), 1):
                self.PLC_output.addItem(self.track_controller.pop(self.wayside_ctrl_comboBox.currentText()))
        self.track_controller.set_automatic(not bool(self.manual_mode_checkBox.checkState()))

        # manual mode changes
        self.load_PLC_btn.setVisible(not bool(self.manual_mode_checkBox.checkState()))
        self.toggle_switch1.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_switch2.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_switch3.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_2.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_3.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_4.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_5.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_6.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_7.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_8.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_9.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_10.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_light_11.setVisible(bool(self.manual_mode_checkBox.checkState()))
        self.toggle_railway.setVisible(bool(self.manual_mode_checkBox.checkState()))

        #adjust UI based on wayside controller
        try:
            self.changeWayside()
        except Exception as e:
            print(e)
        # toggle buttons
        try:
            self.ChangeVisibility()
        except Exception as e:
            print(e)

        # iteration 2 - no system speed
        self.system_speed_label.setVisible(False)
        self.system_speed_spinBox.setVisible(False)
        self.sys_time_label.setVisible(False)

        # iteration 3 - shhh dont tell anyone
        self.sys_time_label.setText(_translate("self", temp_timestr))


    def changeWayside(self):
        _translate = QtCore.QCoreApplication.translate
        if self.wayside_ctrl_comboBox.currentText() == 'Green 1':
            self.traffic_light_label.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[0]))
            self.traffic_light_label_2.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[1]))
            self.traffic_light_label_3.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[2]))
            self.traffic_light_label_4.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[3]))
            self.traffic_light_label_5.setText(_translate("self", "NULL"))
            self.traffic_light_label_6.setText(_translate("self", "NULL"))
            self.traffic_light_label_7.setText(_translate("self", "NULL"))
            self.traffic_light_label_8.setText(_translate("self", "NULL"))
            self.traffic_light_label_9.setText(_translate("self", "NULL"))
            self.traffic_light_label_10.setText(_translate("self", "NULL"))
            self.traffic_light_label_11.setText(_translate("self", "NULL"))
            self.switch_position_left.setText(_translate("self", "12"))
            self.switch_position_right.setText(_translate("self", "1"))
            self.switch_position_left_2.setText(_translate("self", "29"))
            self.switch_position_right_2.setText(_translate("self", "150"))
            self.switch_position_left_3.setText(_translate("self", "Yard"))
            self.switch_position_right_3.setText(_translate("self", "58"))
            self.switch_label_1.setText(
                _translate("self", list(self.track_controller.get_switch_list("Green").keys())[0]))
            self.switch_label_2.setText(
                _translate("self", list(self.track_controller.get_switch_list("Green").keys())[1]))
            self.switch_label_3.setText(
                _translate("self", list(self.track_controller.get_switch_list("Green").keys())[2]))
            self.railway_crossing.setText(
                _translate("self", list(self.track_controller.get_railway_crossings("Green").keys())[0]))
        elif self.wayside_ctrl_comboBox.currentText() == 'Green 2':
            self.traffic_light_label.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[4]))
            self.traffic_light_label_2.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[5]))
            self.traffic_light_label_3.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[6]))
            self.traffic_light_label_4.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[7]))
            self.traffic_light_label_5.setText(
                _translate("self", list(self.track_controller.get_lights("Green").keys())[8]))
            self.traffic_light_label_6.setText(_translate("self", "NULL"))
            self.traffic_light_label_7.setText(_translate("self", "NULL"))
            self.traffic_light_label_8.setText(_translate("self", "NULL"))
            self.traffic_light_label_9.setText(_translate("self", "NULL"))
            self.traffic_light_label_10.setText(_translate("self", "NULL"))
            self.traffic_light_label_11.setText(_translate("self", "NULL"))
            self.switch_position_left.setText(_translate("self", "62"))
            self.switch_position_right.setText(_translate("self", "Yard"))
            self.switch_position_left_2.setText(_translate("self", "101"))
            self.switch_position_right_2.setText(_translate("self", "76"))
            self.switch_position_left_3.setText(_translate("self", "86"))
            self.switch_position_right_3.setText(_translate("self", "100"))
            self.switch_label_1.setText(
                _translate("self", list(self.track_controller.get_switch_list("Green").keys())[3]))
            self.switch_label_2.setText(
                _translate("self", list(self.track_controller.get_switch_list("Green").keys())[4]))
            self.switch_label_3.setText(
                _translate("self", list(self.track_controller.get_switch_list("Green").keys())[5]))
            self.railway_crossing.setText(
                _translate("self", "NULL"))
        elif self.wayside_ctrl_comboBox.currentText() == 'Red 1':
            self.traffic_light_label.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[0]))
            self.traffic_light_label_2.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[1]))
            self.traffic_light_label_3.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[2]))
            self.traffic_light_label_4.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[3]))
            self.traffic_light_label_5.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[4]))
            self.traffic_light_label_6.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[5]))
            self.traffic_light_label_7.setText(_translate("self", "NULL"))
            self.traffic_light_label_8.setText(_translate("self", "NULL"))
            self.traffic_light_label_9.setText(_translate("self", "NULL"))
            self.traffic_light_label_10.setText(_translate("self", "NULL"))
            self.traffic_light_label_11.setText(_translate("self", "NULL"))
            self.switch_position_left.setText(_translate("self", "1"))
            self.switch_position_right.setText(_translate("self", "15"))
            self.switch_position_left_2.setText(_translate("self", "Yard"))
            self.switch_position_right_2.setText(_translate("self", "10"))
            self.switch_position_left_3.setText(_translate("self", "28"))
            self.switch_position_right_3.setText(_translate("self", "76"))
            self.switch_label_1.setText(
                _translate("self", list(self.track_controller.get_switch_list("Red").keys())[0]))
            self.switch_label_2.setText(
                _translate("self", list(self.track_controller.get_switch_list("Red").keys())[1]))
            self.switch_label_3.setText(
                _translate("self", list(self.track_controller.get_switch_list("Red").keys())[2]))
            self.railway_crossing.setText(
                _translate("self", "NULL"))
        elif self.wayside_ctrl_comboBox.currentText() == 'Red 2':
            self.traffic_light_label.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[6]))
            self.traffic_light_label_2.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[7]))
            self.traffic_light_label_3.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[8]))
            self.traffic_light_label_4.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[9]))
            self.traffic_light_label_5.setText(
                _translate("self", list(self.track_controller.get_lights("Red").keys())[10]))
            self.traffic_light_label_6.setText(_translate("self", "NULL"))
            self.traffic_light_label_7.setText(_translate("self", "NULL"))
            self.traffic_light_label_8.setText(_translate("self", "NULL"))
            self.traffic_light_label_9.setText(_translate("self", "NULL"))
            self.traffic_light_label_10.setText(_translate("self", "NULL"))
            self.traffic_light_label_11.setText(_translate("self", "NULL"))

            self.switch_position_left.setText(_translate("self", "39"))
            self.switch_position_right.setText(_translate("self", "71"))
            self.switch_position_left_2.setText(_translate("self", "67"))
            self.switch_position_right_2.setText(_translate("self", "43"))
            self.switch_position_left_3.setText(_translate("self", "53"))
            self.switch_position_right_3.setText(_translate("self", "66"))
            self.switch_label_1.setText(
                _translate("self", list(self.track_controller.get_switch_list("Red").keys())[4]))
            self.switch_label_2.setText(
                _translate("self", list(self.track_controller.get_switch_list("Red").keys())[5]))
            self.switch_label_3.setText(
                _translate("self", list(self.track_controller.get_switch_list("Red").keys())[6]))
            self.railway_crossing.setText(
                _translate("self", list(self.track_controller.get_railway_crossings("Red").keys())[0]))

    # def PLC(self):
    #     self.sect_A_occ = bool(self.track_controller.get_occupancy('1') or self.track_controller.get_occupancy('2') or self.track_controller.get_occupancy('3'))
    #     self.sect_D_occ = bool(self.track_controller.get_occupancy('13') or self.track_controller.get_occupancy('14') or self.track_controller.get_occupancy('15')
    #                            or self.track_controller.get_occupancy('16'))
    #     self.sect_E_occ = bool(self.track_controller.get_occupancy('17') or self.track_controller.get_occupancy('18') or self.track_controller.get_occupancy('19')
    #                            or self.track_controller.get_occupancy('20'))
    #     self.sect_F_occ = bool(self.track_controller.get_occupancy('21') or self.track_controller.get_occupancy('22') or self.track_controller.get_occupancy('23')
    #                            or self.track_controller.get_occupancy('24') or self.track_controller.get_occupancy('25') or self.track_controller.get_occupancy('26')
    #                            or self.track_controller.get_occupancy('27') or self.track_controller.get_occupancy('28'))
    #     self.sect_Z_occ = bool(self.track_controller.get_occupancy('147') or self.track_controller.get_occupancy('148') or self.track_controller.get_occupancy('149')
    #                            or self.track_controller.get_occupancy('150'))
    #
    #     self.track_controller.set_lights(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label.text(),
    #                                      not(not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ) and (self.sect_A_occ)))
    #     self.track_controller.set_lights(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_2.text(),
    #                                      not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ))
    #     self.track_controller.set_lights(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_3.text(),
    #                                      not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ))
    #     self.track_controller.set_lights(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.traffic_light_label_4.text(),
    #                                      not(not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ) and (self.sect_Z_occ)))
    #     # self.track_controller.set_lights(self.traffic_light_label_5.text(),
    #     #                                  not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ))
    #
    #     self.track_controller.set_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_1.text(),
    #                                      not(not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ) and (self.sect_A_occ)))
    #     self.track_controller.set_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_2.text(),
    #                                      not(not (self.sect_F_occ or self.sect_E_occ or self.sect_D_occ) and (self.sect_Z_occ)))
    #     self.track_controller.set_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_3.text(),
    #                                      1)
    #
    #     self.track_controller.set_railway_crossing('18', self.sect_E_occ)

    def ChangeVisibility(self):
        if self.switch_label_1.text() == "NULL":
            self.switch_label_1.setVisible(False)
            self.switch_position_left.setVisible(False)
            self.switch_position_right.setVisible(False)
        else:
            self.switch_label_1.setVisible(True)
            self.switch_position_left.setVisible(bool(self.track_controller.get_switch(
                self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_1.text())))
            self.switch_position_right.setVisible(
                not bool(self.track_controller.get_switch(
                    self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_1.text())))

        if self.switch_label_2.text() == "NULL":
            self.switch_label_2.setVisible(False)
            self.switch_position_left_2.setVisible(False)
            self.switch_position_right_2.setVisible(False)
        else:
            self.switch_label_2.setVisible(True)
            self.switch_position_left_2.setVisible(bool(self.track_controller.get_switch(
                self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_2.text())))
            self.switch_position_right_2.setVisible(
                not bool(self.track_controller.get_switch(
                    self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_2.text())))

        if self.switch_label_3.text() == "NULL":
            self.switch_label_3.setVisible(False)
            self.switch_position_left_3.setVisible(False)
            self.switch_position_right_3.setVisible(False)
        else:
            self.switch_label_3.setVisible(True)
            self.switch_position_left_3.setVisible(
                bool(self.track_controller.get_switch(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                      self.switch_label_3.text())))
            self.switch_position_right_3.setVisible(
                not bool(self.track_controller.get_switch(
                    self.wayside_ctrl_comboBox.currentText().split(' ')[0], self.switch_label_3.text())))

        if self.traffic_light_label.text() == "NULL":
            self.traffic_light_label.setVisible(False)
            self.traffic_light_red.setVisible(False)
            self.traffic_light_green.setVisible(False)
        else:
            self.traffic_light_label.setVisible(True)
            self.traffic_light_red.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label.text())))
            self.traffic_light_green.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label.text())))

        if self.traffic_light_label_2.text() == "NULL":
            self.toggle_light_2.setVisible(False)
            self.traffic_light_label_2.setVisible(False)
            self.traffic_light_red_2.setVisible(False)
            self.traffic_light_green_2.setVisible(False)
        else:
            self.traffic_light_label_2.setVisible(True)
            self.traffic_light_red_2.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_2.text())))
            self.traffic_light_green_2.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_2.text())))

        if self.traffic_light_label_3.text() == "NULL":
            self.toggle_light_3.setVisible(False)
            self.traffic_light_label_3.setVisible(False)
            self.traffic_light_red_3.setVisible(False)
            self.traffic_light_green_3.setVisible(False)
        else:
            self.traffic_light_label_3.setVisible(True)
            self.traffic_light_red_3.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_3.text())))
            self.traffic_light_green_3.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_3.text())))

        if self.traffic_light_label_4.text() == "NULL":
            self.toggle_light_4.setVisible(False)
            self.traffic_light_label_4.setVisible(False)
            self.traffic_light_red_4.setVisible(False)
            self.traffic_light_green_4.setVisible(False)
        else:
            self.traffic_light_label_4.setVisible(True)
            self.traffic_light_red_4.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_4.text())))
            self.traffic_light_green_4.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_4.text())))

        if self.traffic_light_label_5.text() == "NULL":
            self.toggle_light_5.setVisible(False)
            self.traffic_light_label_5.setVisible(False)
            self.traffic_light_red_5.setVisible(False)
            self.traffic_light_green_5.setVisible(False)
        else:
            self.traffic_light_label_5.setVisible(True)
            self.traffic_light_red_5.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_5.text())))
            self.traffic_light_green_5.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_5.text())))

        if self.traffic_light_label_6.text() == "NULL":
            self.toggle_light_6.setVisible(False)
            self.traffic_light_label_6.setVisible(False)
            self.traffic_light_red_6.setVisible(False)
            self.traffic_light_green_6.setVisible(False)
        else:
            self.traffic_light_label_6.setVisible(True)
            self.traffic_light_red_6.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_6.text())))
            self.traffic_light_green_6.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_6.text())))

        if self.traffic_light_label_7.text() == "NULL":
            self.toggle_light_7.setVisible(False)
            self.traffic_light_label_7.setVisible(False)
            self.traffic_light_red_7.setVisible(False)
            self.traffic_light_green_7.setVisible(False)
        else:
            self.traffic_light_label_7.setVisible(True)
            self.traffic_light_red_7.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_7.text())))
            self.traffic_light_green_7.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_7.text())))

        if self.traffic_light_label_8.text() == "NULL":
            self.toggle_light_8.setVisible(False)
            self.traffic_light_label_8.setVisible(False)
            self.traffic_light_red_8.setVisible(False)
            self.traffic_light_green_8.setVisible(False)
        else:
            self.traffic_light_label_8.setVisible(True)
            self.traffic_light_red_8.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_8.text())))
            self.traffic_light_green_8.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_8.text())))

        if self.traffic_light_label_9.text() == "NULL":
            self.toggle_light_9.setVisible(False)
            self.traffic_light_label_9.setVisible(False)
            self.traffic_light_red_9.setVisible(False)
            self.traffic_light_green_9.setVisible(False)
        else:
            self.traffic_light_label_9.setVisible(True)
            self.traffic_light_red_9.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_9.text())))
            self.traffic_light_green_9.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_9.text())))

        if self.traffic_light_label_10.text() == "NULL":
            self.toggle_light_10.setVisible(False)
            self.traffic_light_label_10.setVisible(False)
            self.traffic_light_red_10.setVisible(False)
            self.traffic_light_green_10.setVisible(False)
        else:
            self.traffic_light_label_10.setVisible(True)
            self.traffic_light_red_10.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_10.text())))
            self.traffic_light_green_10.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_10.text())))

        if self.traffic_light_label_11.text() == "NULL":
            self.toggle_light_11.setVisible(False)
            self.traffic_light_label_11.setVisible(False)
            self.traffic_light_red_11.setVisible(False)
            self.traffic_light_green_11.setVisible(False)
        else:
            self.traffic_light_label_11.setVisible(True)
            self.traffic_light_red_11.setVisible(
                bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                     self.traffic_light_label_11.text())))
            self.traffic_light_green_11.setVisible(
                not bool(self.track_controller.get_light(self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                                                         self.traffic_light_label_11.text())))

        if self.railway_crossing.text() == "NULL":
            self.toggle_railway.setVisible(False)
            self.railway_crossing_label.setVisible(False)
            self.railway_crossing.setVisible(False)
        else:
            self.railway_crossing_label.setVisible(True)
            self.railway_crossing.setVisible(
                bool(self.track_controller.get_railway_crossing(
                    self.wayside_ctrl_comboBox.currentText().split(' ')[0],
                    self.railway_crossing.text())))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    e = Ui_TrackController_MainUI(Track_Controller(CTCTrackControllerAPI(), TrackControllerTrackModelAPI()))
    # self = QtWidgets.Qself()
    # tc = Track_Controller()
    # ui = Ui_TrackController_MainUI(tc)
    # ui.setupUi(self)
    # self.show()
    sys.exit(app.exec_())
