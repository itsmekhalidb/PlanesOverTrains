# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Train_Controller_Test_Bench.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from Train_Controller import TrainController
from Train_Controller_Main_Window import Ui_MainWindow
QtWidgets.QApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling, True)

class Ui_Test_Bench(object):
    def __init__(self, train_controller: TrainController):
        super().__init__()
        self.train_controller = train_controller

    def open_window(self):
        self.window = QtWidgets.QMainWindow()
        # self.ui = Ui_TrainModel_MainUI()
        self.ui = Ui_MainWindow(self.train_controller)  # Pass the Traincontroller instance to the new UI
        self.ui.setupUi(self.window)
        self.window.show()

    def setupUi(self, Test_Bench):
        Test_Bench.setObjectName("Test_Bench")
        Test_Bench.resize(629, 582)
        self.centralwidget = QtWidgets.QWidget(Test_Bench)
        self.centralwidget.setObjectName("centralwidget")
        self.title_label = QtWidgets.QLabel(self.centralwidget)
        self.title_label.setGeometry(QtCore.QRect(0, 0, 629, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.title_label.setFont(font)
        self.title_label.setAutoFillBackground(False)
        self.title_label.setStyleSheet("background-color: rgb(255, 255, 0);\n"
"border: 3px solid black;")
        self.title_label.setObjectName("title_label")
        self.main_ui_btn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.open_window())
        self.main_ui_btn.setGeometry(QtCore.QRect(498, 10, 101, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.main_ui_btn.setFont(font)
        self.main_ui_btn.setObjectName("main_ui_btn")
        self.calc_btn = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.calculate())
        self.calc_btn.setGeometry(QtCore.QRect(482, 206, 101, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.calc_btn.setFont(font)
        self.calc_btn.setObjectName("calc_btn")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(250, 354, 375, 105))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(255, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.ebrake_fail_label = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_fail_label.setGeometry(QtCore.QRect(12, 342, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_fail_label.setFont(font)
        self.ebrake_fail_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.ebrake_fail_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ebrake_fail_label.setObjectName("ebrake_fail_label")
        self.brake_fail_label = QtWidgets.QLabel(self.centralwidget)
        self.brake_fail_label.setGeometry(QtCore.QRect(12, 394, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.brake_fail_label.setFont(font)
        self.brake_fail_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.brake_fail_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.brake_fail_label.setObjectName("brake_fail_label")
        self.engine_fail_off = QtWidgets.QLabel(self.centralwidget)
        self.engine_fail_off.setGeometry(QtCore.QRect(150, 372, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.engine_fail_off.setFont(font)
        self.engine_fail_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.engine_fail_off.setAlignment(QtCore.Qt.AlignCenter)
        self.engine_fail_off.setObjectName("engine_fail_off")
        self.engine_fail_label = QtWidgets.QLabel(self.centralwidget)
        self.engine_fail_label.setGeometry(QtCore.QRect(12, 368, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.engine_fail_label.setFont(font)
        self.engine_fail_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.engine_fail_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.engine_fail_label.setObjectName("engine_fail_label")
        self.brake_fail_on = QtWidgets.QLabel(self.centralwidget)
        self.brake_fail_on.setEnabled(True)
        self.brake_fail_on.setGeometry(QtCore.QRect(180, 400, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.brake_fail_on.setFont(font)
        self.brake_fail_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.brake_fail_on.setAlignment(QtCore.Qt.AlignCenter)
        self.brake_fail_on.setObjectName("brake_fail_on")
        self.failure_mode_label = QtWidgets.QLabel(self.centralwidget)
        self.failure_mode_label.setGeometry(QtCore.QRect(12, 316, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.failure_mode_label.setFont(font)
        self.failure_mode_label.setStyleSheet("background-color: rgb(149, 188, 242);\n"
"border: 2px solid black;\n"
"")
        self.failure_mode_label.setAlignment(QtCore.Qt.AlignCenter)
        self.failure_mode_label.setObjectName("failure_mode_label")
        self.brake_fail_off = QtWidgets.QLabel(self.centralwidget)
        self.brake_fail_off.setGeometry(QtCore.QRect(150, 400, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.brake_fail_off.setFont(font)
        self.brake_fail_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.brake_fail_off.setAlignment(QtCore.Qt.AlignCenter)
        self.brake_fail_off.setObjectName("brake_fail_off")
        self.signal_fail_label = QtWidgets.QLabel(self.centralwidget)
        self.signal_fail_label.setGeometry(QtCore.QRect(12, 420, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.signal_fail_label.setFont(font)
        self.signal_fail_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.signal_fail_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.signal_fail_label.setObjectName("signal_fail_label")
        self.ebrake_fail_on = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_fail_on.setEnabled(True)
        self.ebrake_fail_on.setGeometry(QtCore.QRect(180, 346, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_fail_on.setFont(font)
        self.ebrake_fail_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.ebrake_fail_on.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_fail_on.setObjectName("ebrake_fail_on")
        self.signal_fail_off = QtWidgets.QLabel(self.centralwidget)
        self.signal_fail_off.setGeometry(QtCore.QRect(150, 424, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.signal_fail_off.setFont(font)
        self.signal_fail_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.signal_fail_off.setAlignment(QtCore.Qt.AlignCenter)
        self.signal_fail_off.setObjectName("signal_fail_off")
        self.signal_fail_on = QtWidgets.QLabel(self.centralwidget)
        self.signal_fail_on.setEnabled(True)
        self.signal_fail_on.setGeometry(QtCore.QRect(180, 424, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.signal_fail_on.setFont(font)
        self.signal_fail_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.signal_fail_on.setAlignment(QtCore.Qt.AlignCenter)
        self.signal_fail_on.setObjectName("signal_fail_on")
        self.engine_fail_on = QtWidgets.QLabel(self.centralwidget)
        self.engine_fail_on.setEnabled(True)
        self.engine_fail_on.setGeometry(QtCore.QRect(180, 372, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.engine_fail_on.setFont(font)
        self.engine_fail_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.engine_fail_on.setAlignment(QtCore.Qt.AlignCenter)
        self.engine_fail_on.setObjectName("engine_fail_on")
        self.ebrake_fail_off = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_fail_off.setEnabled(True)
        self.ebrake_fail_off.setGeometry(QtCore.QRect(150, 346, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_fail_off.setFont(font)
        self.ebrake_fail_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.ebrake_fail_off.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_fail_off.setObjectName("ebrake_fail_off")
        self.ebrake_on = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_on.setEnabled(True)
        self.ebrake_on.setGeometry(QtCore.QRect(180, 266, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_on.setFont(font)
        self.ebrake_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.ebrake_on.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_on.setObjectName("ebrake_on")
        self.right_door_closed = QtWidgets.QLabel(self.centralwidget)
        self.right_door_closed.setEnabled(True)
        self.right_door_closed.setGeometry(QtCore.QRect(96, 138, 53, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.right_door_closed.setFont(font)
        self.right_door_closed.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.right_door_closed.setAlignment(QtCore.Qt.AlignCenter)
        self.right_door_closed.setObjectName("right_door_closed")
        self.ebrake_label = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_label.setGeometry(QtCore.QRect(12, 262, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_label.setFont(font)
        self.ebrake_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.ebrake_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ebrake_label.setObjectName("ebrake_label")
        self.left_door_closed = QtWidgets.QLabel(self.centralwidget)
        self.left_door_closed.setEnabled(True)
        self.left_door_closed.setGeometry(QtCore.QRect(96, 164, 53, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.left_door_closed.setFont(font)
        self.left_door_closed.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.left_door_closed.setAlignment(QtCore.Qt.AlignCenter)
        self.left_door_closed.setObjectName("left_door_closed")
        self.external_lights_off = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_off.setEnabled(True)
        self.external_lights_off.setGeometry(QtCore.QRect(150, 240, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_off.setFont(font)
        self.external_lights_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.external_lights_off.setAlignment(QtCore.Qt.AlignCenter)
        self.external_lights_off.setObjectName("external_lights_off")
        self.internal_lights_off = QtWidgets.QLabel(self.centralwidget)
        self.internal_lights_off.setEnabled(True)
        self.internal_lights_off.setGeometry(QtCore.QRect(150, 214, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.internal_lights_off.setFont(font)
        self.internal_lights_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.internal_lights_off.setAlignment(QtCore.Qt.AlignCenter)
        self.internal_lights_off.setObjectName("internal_lights_off")
        self.right_door_label = QtWidgets.QLabel(self.centralwidget)
        self.right_door_label.setGeometry(QtCore.QRect(12, 134, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.right_door_label.setFont(font)
        self.right_door_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.right_door_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.right_door_label.setObjectName("right_door_label")
        self.external_lights_label = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label.setGeometry(QtCore.QRect(12, 236, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label.setFont(font)
        self.external_lights_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label.setObjectName("external_lights_label")
        self.external_lights_on = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_on.setEnabled(True)
        self.external_lights_on.setGeometry(QtCore.QRect(180, 240, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_on.setFont(font)
        self.external_lights_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.external_lights_on.setAlignment(QtCore.Qt.AlignCenter)
        self.external_lights_on.setObjectName("external_lights_on")
        self.ebrake_off = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_off.setEnabled(True)
        self.ebrake_off.setGeometry(QtCore.QRect(150, 266, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_off.setFont(font)
        self.ebrake_off.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.ebrake_off.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_off.setObjectName("ebrake_off")
        self.right_door_open = QtWidgets.QLabel(self.centralwidget)
        self.right_door_open.setEnabled(True)
        self.right_door_open.setGeometry(QtCore.QRect(154, 138, 49, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.right_door_open.setFont(font)
        self.right_door_open.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.right_door_open.setAlignment(QtCore.Qt.AlignCenter)
        self.right_door_open.setObjectName("right_door_open")
        self.left_door_label = QtWidgets.QLabel(self.centralwidget)
        self.left_door_label.setGeometry(QtCore.QRect(12, 160, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.left_door_label.setFont(font)
        self.left_door_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.left_door_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.left_door_label.setObjectName("left_door_label")
        self.internal_lights_label = QtWidgets.QLabel(self.centralwidget)
        self.internal_lights_label.setGeometry(QtCore.QRect(12, 210, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.internal_lights_label.setFont(font)
        self.internal_lights_label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.internal_lights_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.internal_lights_label.setObjectName("internal_lights_label")
        self.internal_lights_on = QtWidgets.QLabel(self.centralwidget)
        self.internal_lights_on.setEnabled(True)
        self.internal_lights_on.setGeometry(QtCore.QRect(180, 214, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.internal_lights_on.setFont(font)
        self.internal_lights_on.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.internal_lights_on.setAlignment(QtCore.Qt.AlignCenter)
        self.internal_lights_on.setObjectName("internal_lights_on")
        self.left_door_open = QtWidgets.QLabel(self.centralwidget)
        self.left_door_open.setEnabled(True)
        self.left_door_open.setGeometry(QtCore.QRect(154, 164, 49, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.left_door_open.setFont(font)
        self.left_door_open.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.left_door_open.setAlignment(QtCore.Qt.AlignCenter)
        self.left_door_open.setObjectName("left_door_open")
        self.controls_label = QtWidgets.QLabel(self.centralwidget)
        self.controls_label.setGeometry(QtCore.QRect(12, 108, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.controls_label.setFont(font)
        self.controls_label.setStyleSheet("background-color: rgb(149, 188, 242);\n"
"border: 2px solid black;\n"
"")
        self.controls_label.setAlignment(QtCore.Qt.AlignCenter)
        self.controls_label.setObjectName("controls_label")
        self.ebrake_off_2 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_off_2.setEnabled(True)
        self.ebrake_off_2.setGeometry(QtCore.QRect(150, 292, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_off_2.setFont(font)
        self.ebrake_off_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.ebrake_off_2.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_off_2.setObjectName("ebrake_off_2")
        self.ebrake_on_2 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_on_2.setEnabled(True)
        self.ebrake_on_2.setGeometry(QtCore.QRect(180, 292, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_on_2.setFont(font)
        self.ebrake_on_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.ebrake_on_2.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_on_2.setObjectName("ebrake_on_2")
        self.ebrake_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_label_2.setGeometry(QtCore.QRect(12, 288, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_label_2.setFont(font)
        self.ebrake_label_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.ebrake_label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ebrake_label_2.setObjectName("ebrake_label_2")
        self.external_lights_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_2.setGeometry(QtCore.QRect(458, 140, 143, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_2.setFont(font)
        self.external_lights_label_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_2.setObjectName("external_lights_label_2")
        self.controls_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.controls_label_2.setGeometry(QtCore.QRect(458, 54, 143, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.controls_label_2.setFont(font)
        self.controls_label_2.setStyleSheet("background-color: rgb(149, 188, 242);\n"
"border: 2px solid black;\n"
"")
        self.controls_label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.controls_label_2.setObjectName("controls_label_2")
        self.doubleSpinBox = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.doubleSpinBox.setGeometry(QtCore.QRect(526, 142, 68, 24))
        self.doubleSpinBox.setObjectName("doubleSpinBox")
        self.external_lights_label_3 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_3.setGeometry(QtCore.QRect(458, 80, 143, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_3.setFont(font)
        self.external_lights_label_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_3.setObjectName("external_lights_label_3")
        self.doubleSpinBox_2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.doubleSpinBox_2.setGeometry(QtCore.QRect(526, 82, 68, 24))
        self.doubleSpinBox_2.setObjectName("doubleSpinBox_2")
        self.external_lights_label_4 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_4.setGeometry(QtCore.QRect(458, 110, 143, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_4.setFont(font)
        self.external_lights_label_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_4.setObjectName("external_lights_label_4")
        self.doubleSpinBox_3 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.doubleSpinBox_3.setGeometry(QtCore.QRect(526, 112, 68, 24))
        self.doubleSpinBox_3.setObjectName("doubleSpinBox_3")
        self.external_lights_label_5 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_5.setGeometry(QtCore.QRect(458, 170, 143, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_5.setFont(font)
        self.external_lights_label_5.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_5.setObjectName("external_lights_label_5")
        self.doubleSpinBox_4 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.doubleSpinBox_4.setGeometry(QtCore.QRect(526, 172, 68, 24))
        self.doubleSpinBox_4.setObjectName("doubleSpinBox_4")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(2, 462, 629, 5))
        self.line.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(0, 0, 0);\n"
"border: 1px solid black;\n"
"")
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.external_lights_label_9 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_9.setGeometry(QtCore.QRect(246, 80, 187, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_9.setFont(font)
        self.external_lights_label_9.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_9.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_9.setObjectName("external_lights_label_9")
        self.controls_label_3 = QtWidgets.QLabel(self.centralwidget)
        self.controls_label_3.setGeometry(QtCore.QRect(246, 54, 187, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.controls_label_3.setFont(font)
        self.controls_label_3.setStyleSheet("background-color: rgb(149, 188, 242);\n"
"border: 2px solid black;\n"
"")
        self.controls_label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.controls_label_3.setObjectName("controls_label_3")
        self.external_lights_label_10 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_10.setGeometry(QtCore.QRect(246, 108, 187, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_10.setFont(font)
        self.external_lights_label_10.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_10.setObjectName("external_lights_label_10")
        self.external_lights_label_11 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_11.setGeometry(QtCore.QRect(246, 138, 187, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_11.setFont(font)
        self.external_lights_label_11.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_11.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_11.setObjectName("external_lights_label_11")
        self.external_lights_label_12 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_12.setGeometry(QtCore.QRect(246, 168, 187, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_12.setFont(font)
        self.external_lights_label_12.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_12.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_12.setObjectName("external_lights_label_12")
        self.external_lights_label_13 = QtWidgets.QLabel(self.centralwidget)
        self.external_lights_label_13.setGeometry(QtCore.QRect(246, 198, 187, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.external_lights_label_13.setFont(font)
        self.external_lights_label_13.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.external_lights_label_13.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.external_lights_label_13.setObjectName("external_lights_label_13")
        self.cmd_pwr_label = QtWidgets.QLabel(self.centralwidget)
        self.cmd_pwr_label.setGeometry(QtCore.QRect(310, 474, 81, 39))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.cmd_pwr_label.setFont(font)
        self.cmd_pwr_label.setAlignment(QtCore.Qt.AlignCenter)
        self.cmd_pwr_label.setWordWrap(True)
        self.cmd_pwr_label.setObjectName("cmd_pwr_label")
        self.speed_limit_label = QtWidgets.QLabel(self.centralwidget)
        self.speed_limit_label.setGeometry(QtCore.QRect(156, 482, 79, 19))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.speed_limit_label.setFont(font)
        self.speed_limit_label.setObjectName("speed_limit_label")
        self.speed_limit_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.speed_limit_edit.setGeometry(QtCore.QRect(234, 476, 65, 31))
        self.speed_limit_edit.setObjectName("speed_limit_edit")
        self.train_line_label = QtWidgets.QLabel(self.centralwidget)
        self.train_line_label.setGeometry(QtCore.QRect(2, 512, 65, 19))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.train_line_label.setFont(font)
        self.train_line_label.setAlignment(QtCore.Qt.AlignCenter)
        self.train_line_label.setObjectName("train_line_label")

        self.actual_velocity_label = QtWidgets.QLabel(self.centralwidget)
        self.actual_velocity_label.setGeometry(QtCore.QRect(234, 510, 65, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.actual_velocity_label.setFont(font)
        self.actual_velocity_label.setAlignment(QtCore.Qt.AlignCenter)
        self.actual_velocity_label.setObjectName("actual_velocity_label")

        # self.underground_label = QtWidgets.QLabel(self.centralwidget)
        # self.underground_label.setGeometry(QtCore.QRect(156, 512, 87, 19))
        # font = QtGui.QFont()
        # font.setPointSize(9)
        # font.setBold(True)
        # font.setWeight(75)
        # self.underground_label.setFont(font)
        # self.underground_label.setObjectName("underground_label")
        # self.underground_edit = QtWidgets.QTextEdit(self.centralwidget)
        # self.underground_edit.setGeometry(QtCore.QRect(234, 510, 65, 31))
        # self.underground_edit.setObjectName("underground_edit")
        # self.underground_label.setGeometry(QtCore.QRect(156, 512, 87, 19))

        self.actual_velocity_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.actual_velocity_label.setFont(font)
        self.actual_velocity_label.setObjectName("actual_velocity_label")
        self.actual_velocity_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.actual_velocity_edit.setGeometry(QtCore.QRect(234, 510, 65, 31))
        self.actual_velocity_edit.setObjectName("actual_velocity_edit")
        self.actual_velocity_label.setGeometry(QtCore.QRect(156, 512, 87, 19))

        self.acc_pwr_label = QtWidgets.QLabel(self.centralwidget)
        self.acc_pwr_label.setGeometry(QtCore.QRect(318, 514, 87, 19))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.acc_pwr_label.setFont(font)
        self.acc_pwr_label.setObjectName("acc_pwr_label")
        self.cmd_pwr_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.cmd_pwr_edit.setGeometry(QtCore.QRect(402, 476, 65, 31))
        self.cmd_pwr_edit.setObjectName("cmd_pwr_edit")
        self.acc_pwr_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.acc_pwr_edit.setGeometry(QtCore.QRect(402, 510, 65, 31))
        self.acc_pwr_edit.setObjectName("acc_pwr_edit")
        self.authority_label = QtWidgets.QLabel(self.centralwidget)
        self.authority_label.setGeometry(QtCore.QRect(4, 482, 65, 19))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.authority_label.setFont(font)
        self.authority_label.setAlignment(QtCore.Qt.AlignCenter)
        self.authority_label.setObjectName("authority_label")
        self.authority_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.authority_edit.setGeometry(QtCore.QRect(74, 474, 65, 31))
        self.authority_edit.setObjectName("authority_edit")
        self.train_line_edit = QtWidgets.QTextEdit(self.centralwidget)
        self.train_line_edit.setGeometry(QtCore.QRect(74, 508, 65, 31))
        self.train_line_edit.setObjectName("train_line_edit")



        self.ebrake_label_3 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_label_3.setGeometry(QtCore.QRect(12, 186, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_label_3.setFont(font)
        self.ebrake_label_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.ebrake_label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ebrake_label_3.setObjectName("ebrake_label_3")
        self.ebrake_off_3 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_off_3.setEnabled(True)
        self.ebrake_off_3.setGeometry(QtCore.QRect(150, 190, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_off_3.setFont(font)
        self.ebrake_off_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.ebrake_off_3.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_off_3.setObjectName("ebrake_off_3")
        self.ebrake_on_3 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_on_3.setEnabled(True)
        self.ebrake_on_3.setGeometry(QtCore.QRect(182, 190, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_on_3.setFont(font)
        self.ebrake_on_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.ebrake_on_3.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_on_3.setObjectName("ebrake_on_3")
        self.cmd_pwr_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.cmd_pwr_label_2.setGeometry(QtCore.QRect(456, 472, 81, 39))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.cmd_pwr_label_2.setFont(font)
        self.cmd_pwr_label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.cmd_pwr_label_2.setWordWrap(True)
        self.cmd_pwr_label_2.setObjectName("cmd_pwr_label_2")
        self.acc_pwr_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.acc_pwr_label_2.setGeometry(QtCore.QRect(492, 512, 87, 19))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.acc_pwr_label_2.setFont(font)
        self.acc_pwr_label_2.setObjectName("acc_pwr_label_2")
        self.cmd_pwr_edit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cmd_pwr_edit_2.setGeometry(QtCore.QRect(522, 474, 65, 31))
        self.cmd_pwr_edit_2.setObjectName("cmd_pwr_edit_2")
        self.acc_pwr_edit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.acc_pwr_edit_2.setGeometry(QtCore.QRect(522, 508, 65, 31))
        self.acc_pwr_edit_2.setObjectName("acc_pwr_edit_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(214, 290, 87, 20))
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(214, 264, 87, 20))
        self.checkBox_2.setText("")
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_3.setGeometry(QtCore.QRect(214, 238, 87, 20))
        self.checkBox_3.setText("")
        self.checkBox_3.setObjectName("checkBox_3")
        self.checkBox_4 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_4.setGeometry(QtCore.QRect(214, 212, 87, 20))
        self.checkBox_4.setText("")
        self.checkBox_4.setObjectName("checkBox_4")
        self.checkBox_5 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_5.setGeometry(QtCore.QRect(214, 188, 87, 20))
        self.checkBox_5.setText("")
        self.checkBox_5.setObjectName("checkBox_5")
        self.checkBox_6 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_6.setGeometry(QtCore.QRect(214, 162, 87, 20))
        self.checkBox_6.setText("")
        self.checkBox_6.setObjectName("checkBox_6")
        self.checkBox_7 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_7.setGeometry(QtCore.QRect(214, 138, 87, 20))
        self.checkBox_7.setText("")
        self.checkBox_7.setObjectName("checkBox_7")
        self.checkBox_8 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_8.setGeometry(QtCore.QRect(216, 344, 87, 20))
        self.checkBox_8.setText("")
        self.checkBox_8.setObjectName("checkBox_8")
        self.checkBox_9 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_9.setGeometry(QtCore.QRect(216, 370, 87, 20))
        self.checkBox_9.setText("")
        self.checkBox_9.setObjectName("checkBox_9")
        self.checkBox_10 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_10.setGeometry(QtCore.QRect(216, 396, 87, 20))
        self.checkBox_10.setText("")
        self.checkBox_10.setObjectName("checkBox_10")
        self.checkBox_11 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_11.setGeometry(QtCore.QRect(216, 422, 87, 20))
        self.checkBox_11.setText("")
        self.checkBox_11.setObjectName("checkBox_11")
        self.ebrake_fail_on_2 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_fail_on_2.setEnabled(True)
        self.ebrake_fail_on_2.setGeometry(QtCore.QRect(180, 84, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_fail_on_2.setFont(font)
        self.ebrake_fail_on_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 0);")
        self.ebrake_fail_on_2.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_fail_on_2.setObjectName("ebrake_fail_on_2")
        self.checkBox_12 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_12.setGeometry(QtCore.QRect(216, 82, 87, 20))
        self.checkBox_12.setText("")
        self.checkBox_12.setObjectName("checkBox_12")
        self.ebrake_fail_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_fail_label_2.setGeometry(QtCore.QRect(12, 80, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_fail_label_2.setFont(font)
        self.ebrake_fail_label_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid black;\n"
"")
        self.ebrake_fail_label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ebrake_fail_label_2.setObjectName("ebrake_fail_label_2")
        self.failure_mode_label_2 = QtWidgets.QLabel(self.centralwidget)
        self.failure_mode_label_2.setGeometry(QtCore.QRect(12, 54, 198, 27))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.failure_mode_label_2.setFont(font)
        self.failure_mode_label_2.setStyleSheet("background-color: rgb(149, 188, 242);\n"
"border: 2px solid black;\n"
"")
        self.failure_mode_label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.failure_mode_label_2.setObjectName("failure_mode_label_2")
        self.ebrake_fail_off_2 = QtWidgets.QLabel(self.centralwidget)
        self.ebrake_fail_off_2.setEnabled(True)
        self.ebrake_fail_off_2.setGeometry(QtCore.QRect(150, 84, 25, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.ebrake_fail_off_2.setFont(font)
        self.ebrake_fail_off_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(170, 0, 0);")
        self.ebrake_fail_off_2.setAlignment(QtCore.Qt.AlignCenter)
        self.ebrake_fail_off_2.setObjectName("ebrake_fail_off_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(250, 242, 375, 105))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.ebrake_fail_label_2.raise_()
        self.failure_mode_label_2.raise_()
        self.ebrake_label_3.raise_()
        self.ebrake_on_3.raise_()
        self.ebrake_off_3.raise_()
        self.external_lights_label_13.raise_()
        self.external_lights_label_2.raise_()
        self.ebrake_label_2.raise_()
        self.left_door_label.raise_()
        self.right_door_label.raise_()
        self.ebrake_label.raise_()
        self.external_lights_label.raise_()
        self.internal_lights_label.raise_()
        self.engine_fail_label.raise_()
        self.title_label.raise_()
        self.main_ui_btn.raise_()
        self.calc_btn.raise_()
        self.pushButton.raise_()
        self.ebrake_fail_label.raise_()
        self.brake_fail_label.raise_()
        self.engine_fail_off.raise_()
        self.brake_fail_on.raise_()
        self.failure_mode_label.raise_()
        self.brake_fail_off.raise_()
        self.signal_fail_label.raise_()
        self.ebrake_fail_on.raise_()
        self.signal_fail_off.raise_()
        self.signal_fail_on.raise_()
        self.engine_fail_on.raise_()
        self.ebrake_fail_off.raise_()
        self.ebrake_on.raise_()
        self.right_door_closed.raise_()
        self.left_door_closed.raise_()
        self.external_lights_off.raise_()
        self.internal_lights_off.raise_()
        self.external_lights_on.raise_()
        self.ebrake_off.raise_()
        self.right_door_open.raise_()
        self.internal_lights_on.raise_()
        self.left_door_open.raise_()
        self.controls_label.raise_()
        self.ebrake_off_2.raise_()
        self.ebrake_on_2.raise_()
        self.controls_label_2.raise_()
        self.doubleSpinBox.raise_()
        self.external_lights_label_3.raise_()
        self.doubleSpinBox_2.raise_()
        self.external_lights_label_4.raise_()
        self.doubleSpinBox_3.raise_()
        self.external_lights_label_5.raise_()
        self.doubleSpinBox_4.raise_()
        self.line.raise_()
        self.external_lights_label_9.raise_()
        self.controls_label_3.raise_()
        self.external_lights_label_10.raise_()
        self.external_lights_label_11.raise_()
        self.external_lights_label_12.raise_()
        self.cmd_pwr_label.raise_()
        self.speed_limit_label.raise_()
        self.speed_limit_edit.raise_()
        self.train_line_label.raise_()
        self.actual_velocity_label.raise_()
        #self.underground_label.raise_()
        #self.underground_edit.raise_()
        self.acc_pwr_label.raise_()
        self.cmd_pwr_edit.raise_()
        self.acc_pwr_edit.raise_()
        self.authority_label.raise_()
        self.authority_edit.raise_()
        self.train_line_edit.raise_()
        self.actual_velocity_edit.raise_()
        self.cmd_pwr_label_2.raise_()
        self.acc_pwr_label_2.raise_()
        self.cmd_pwr_edit_2.raise_()
        self.acc_pwr_edit_2.raise_()
        self.checkBox.raise_()
        self.checkBox_2.raise_()
        self.checkBox_3.raise_()
        self.checkBox_4.raise_()
        self.checkBox_5.raise_()
        self.checkBox_6.raise_()
        self.checkBox_7.raise_()
        self.checkBox_8.raise_()
        self.checkBox_9.raise_()
        self.checkBox_10.raise_()
        self.checkBox_11.raise_()
        self.ebrake_fail_on_2.raise_()
        self.checkBox_12.raise_()
        self.ebrake_fail_off_2.raise_()
        self.pushButton_2.raise_()
        Test_Bench.setCentralWidget(self.centralwidget)

        self.retranslateUi(Test_Bench)
        QtCore.QMetaObject.connectSlotsByName(Test_Bench)
        self._handler()
        #Auto Status
        self.checkBox_12.toggled.connect(
                lambda: self.train_controller.set_auto_status(self.checkBox_12.isChecked()))
        #Right Door
        self.checkBox_7.toggled.connect(
                lambda: self.train_controller.set_right_door_status(self.checkBox_7.isChecked()))
        #Left Door
        self.checkBox_6.toggled.connect(
                lambda: self.train_controller.set_left_door_status(self.checkBox_6.isChecked()))
        #Undergound Status
        self.checkBox_5.toggled.connect(
                lambda: self.train_controller.set_underground_status(self.checkBox_5.isChecked()))
        #internal lights
        self.checkBox_4.toggled.connect(
                lambda: self.train_controller.set_internal_lights(self.checkBox_4.isChecked()))
        #external lights
        self.checkBox_3.toggled.connect(
                lambda: self.train_controller.set_external_lights(self.checkBox_3.isChecked()))
        #emergency brake
        self.checkBox_2.toggled.connect(
                lambda: self.train_controller.set_emergency_brake_status(self.checkBox_2.isChecked()))
        #service brake
        self.checkBox.toggled.connect(
                lambda: self.train_controller.set_service_brake_status(self.checkBox.isChecked()))
        #emergency brake failure
        self.checkBox_8.toggled.connect(
                lambda: self.train_controller.set_emergency_brake_failure(self.checkBox_8.isChecked()))
        #signal pickup failure
        self.checkBox_11.toggled.connect(
                lambda: self.train_controller.set_signal_pickup_failure_status(self.checkBox_11.isChecked()))
        #train engine failure
        self.checkBox_9.toggled.connect(
                lambda: self.train_controller.set_engine_status(self.checkBox_9.isChecked()))
        #service brake failure
        self.checkBox_10.toggled.connect(
                lambda: self.train_controller.set_service_brake_failure(self.checkBox_10.isChecked()))
        #Speed Limit
        self.external_lights_label_9.setText(str("Speed Limit: " + str(self.train_controller.get_maximum_velocity())))
        #Commanded Speed
        self.external_lights_label_10.setText(str("Commanded Speed: " + str(self.train_controller.get_commanded_velocity())))
        #actual speed
        self.external_lights_label_11.setText(str("Actual Speed: " + str(self.train_controller.get_current_velocity())))
        #commanded power
        self.external_lights_label_12.setText(str("Commanded Power" + str(self.train_controller.get_commanded_power())))
        #authority
        self.external_lights_label_13.setText(str("Authority: " + str(self.train_controller.get_authority())));
        #kp
        self.doubleSpinBox_2.setValue(float(self.train_controller.get_kp()))
        #ki
        self.doubleSpinBox_3.setValue(float(self.train_controller.get_ki()))
        #ek
        self.doubleSpinBox.setValue(float(self.train_controller.get_ki()))
        #uk
        self.doubleSpinBox_4.setValue(float(self.train_controller.get_ki()))

    def _handler(self):
        self.timer = QTimer()
        self.timer.setInterval(100)  # 100ms update rate
        self.timer.timeout.connect(self.update)
        self.timer.start()
    def update(self):
        _translate = QtCore.QCoreApplication.translate
        #auto status
        self.ebrake_fail_on_2.setVisible(bool(self.train_controller.get_auto_status()))
        self.ebrake_fail_off_2.setVisible(not bool(self.train_controller.get_auto_status()))
        #right door status
        self.right_door_open.setVisible(bool(self.train_controller.get_right_door_status()))
        self.right_door_closed.setVisible(not bool(self.train_controller.get_right_door_status()))
        #left door status
        self.left_door_open.setVisible(bool(self.train_controller.get_left_door_status()))
        self.left_door_closed.setVisible(not bool(self.train_controller.get_left_door_status()))
        #undergound status
        self.ebrake_on_3.setVisible(bool(self.train_controller.get_underground_status()))
        self.ebrake_off_3.setVisible(not bool(self.train_controller.get_underground_status()))
        #internal lights
        self.internal_lights_on.setVisible(bool(self.train_controller.get_internal_lights()))
        self.internal_lights_off.setVisible(not bool(self.train_controller.get_internal_lights()))
        #external lights
        self.external_lights_on.setVisible(bool(self.train_controller.get_external_lights()))
        self.external_lights_off.setVisible(not bool(self.train_controller.get_external_lights()))
        #emergency brake
        self.ebrake_on.setVisible(bool(self.train_controller.get_ebrake_status()))
        self.ebrake_off.setVisible(not bool(self.train_controller.get_ebrake_status()))
        #service brake
        self.ebrake_on_2.setVisible(bool(self.train_controller.get_service_brake_status()))
        self.ebrake_off_2.setVisible(not bool(self.train_controller.get_service_brake_status()))
        #ebrake failure
        self.ebrake_fail_on.setVisible(bool(self.train_controller.get_emergency_brake_failure_status()))
        self.ebrake_fail_off.setVisible(not bool(self.train_controller.get_emergency_brake_failure_status()))
        #service brake failure
        self.brake_fail_on.setVisible(bool(self.train_controller.get_service_brake_failure_status()))
        self.brake_fail_off.setVisible(not bool(self.train_controller.get_service_brake_failure_status()))
        #train engine failure status
        self.engine_fail_on.setVisible(bool(self.train_controller.get_engine_status()))
        self.engine_fail_off.setVisible(not bool(self.train_controller.get_engine_status()))
        #signal pickup failure
        self.signal_fail_on.setVisible(bool(self.train_controller.get_signal_pickup_failure()))
        self.signal_fail_off.setVisible(not bool(self.train_controller.get_signal_pickup_failure()))
        #speed limit
        self.external_lights_label_9.setText(str("Speed Limit: " + str(self.train_controller.get_maximum_velocity())))
        #commanded speed
        self.external_lights_label_10.setText(str("Commanded Speed: " + str(self.train_controller.get_commanded_velocity())))
        #kp
        self.doubleSpinBox_2.setValue(float(self.train_controller.get_kp()))
        #ki
        self.doubleSpinBox_3.setValue(float(self.train_controller.get_ki()))
        #actual speed
        self.external_lights_label_11.setText(str("Actual Speed: " + str(round(self.train_controller.get_current_velocity(),0))))
        #commanded power
        self.external_lights_label_12.setText(str("Commanded Power: " + str(self.train_controller.get_commanded_power())))
        #authority
        self.external_lights_label_13.setText(str("Authority: " + str(self.train_controller.get_authority())))
        #actual velocity
        # self.actual_velocity_label.setText(str("Actual Velocity: " + str(self.train_controller.get_current_velocity())));
        #train line
        self.title_label.setText(str("Train Line: " + str(self.train_controller.get_train_line())))
        #underground
        #self.underground_label.setText(str("Underground: " + str(self.train_controller.get_underground_status())))
        #ebrake clicked
        self.pushButton.clicked.connect(lambda: self.train_controller.set_emergency_brake_status(True))
        if self.train_controller.get_ebrake_status() == True:
                self.pushButton.clicked.connect(lambda: self.train_controller.set_emergency_brake_status(False))
        #service brake clicked
        self.pushButton_2.clicked.connect(lambda: self.train_controller.set_service_brake_status(True))
        if self.train_controller.get_service_brake_status()==True:
                self.pushButton_2.clicked.connect(lambda: self.train_controller.set_service_brake_status(False))
                #self.train_controller.set_current_velocity(self.train_controller.get_current_velocity(),self.train_controller.get_maximum_velocity())
    def calculate(self):

        speed_limit = self.speed_limit_edit.toPlainText()
        self.train_controller.set_maximum_veloctity(float(speed_limit))

        authority = self.authority_edit.toPlainText()
        self.train_controller.set_authority(float(authority))

        actual_velocity = self.actual_velocity_edit.toPlainText()
        self.train_controller.set_current_velocity(float(actual_velocity), float(speed_limit))

        train_line = self.train_line_edit.toPlainText()
        self.train_controller.set_train_line(train_line)

        #underground = self.underground_edit.toPlainText()
        #self.train_controller.set_underground_status(bool(underground))

        kp = self.cmd_pwr_edit_2.toPlainText()
        print(kp)
        self.train_controller.set_kp(float(kp),1.0)

    def retranslateUi(self, Test_Bench):
        _translate = QtCore.QCoreApplication.translate
        Test_Bench.setWindowTitle(_translate("Test_Bench", "MainWindow"))
        self.title_label.setText(_translate("Test_Bench", " Train #NUM Line COLOR"))
        self.main_ui_btn.setText(_translate("Test_Bench", "Main UI"))
        self.calc_btn.setText(_translate("Test_Bench", "Calculate"))
        self.pushButton.setText(_translate("Test_Bench", "Emergency Brake"))
        self.ebrake_fail_label.setText(_translate("Test_Bench", "E-Brake Failure"))
        self.brake_fail_label.setText(_translate("Test_Bench", "Service Brake Failure"))
        self.engine_fail_off.setText(_translate("Test_Bench", "OFF"))
        self.engine_fail_label.setText(_translate("Test_Bench", "Train Engine Failure"))
        self.brake_fail_on.setText(_translate("Test_Bench", "ON"))
        self.failure_mode_label.setText(_translate("Test_Bench", "Failure Modes"))
        self.brake_fail_off.setText(_translate("Test_Bench", "OFF"))
        self.signal_fail_label.setText(_translate("Test_Bench", "Signal Pickup Failure"))
        self.ebrake_fail_on.setText(_translate("Test_Bench", "ON"))
        self.signal_fail_off.setText(_translate("Test_Bench", "OFF"))
        self.signal_fail_on.setText(_translate("Test_Bench", "ON"))
        self.engine_fail_on.setText(_translate("Test_Bench", "ON"))
        self.ebrake_fail_off.setText(_translate("Test_Bench", "OFF"))
        self.ebrake_on.setText(_translate("Test_Bench", "ON"))
        self.right_door_closed.setText(_translate("Test_Bench", "CLOSED"))
        self.ebrake_label.setText(_translate("Test_Bench", "E-Brake"))
        self.left_door_closed.setText(_translate("Test_Bench", "CLOSED"))
        self.external_lights_off.setText(_translate("Test_Bench", "OFF"))
        self.internal_lights_off.setText(_translate("Test_Bench", "OFF"))
        self.right_door_label.setText(_translate("Test_Bench", "Right Door"))
        self.external_lights_label.setText(_translate("Test_Bench", "External Lights"))
        self.external_lights_on.setText(_translate("Test_Bench", "ON"))
        self.ebrake_off.setText(_translate("Test_Bench", "OFF"))
        self.right_door_open.setText(_translate("Test_Bench", "OPEN"))
        self.left_door_label.setText(_translate("Test_Bench", "Left Door"))
        self.internal_lights_label.setText(_translate("Test_Bench", "Internal Lights"))
        self.internal_lights_on.setText(_translate("Test_Bench", "ON"))
        self.left_door_open.setText(_translate("Test_Bench", "OPEN"))
        self.controls_label.setText(_translate("Test_Bench", "Controls"))
        self.ebrake_off_2.setText(_translate("Test_Bench", "OFF"))
        self.ebrake_on_2.setText(_translate("Test_Bench", "ON"))
        self.ebrake_label_2.setText(_translate("Test_Bench", "Service Brake"))
        self.external_lights_label_2.setText(_translate("Test_Bench", "Ek"))
        self.controls_label_2.setText(_translate("Test_Bench", "Power Controls"))
        self.external_lights_label_3.setText(_translate("Test_Bench", "Kp"))
        self.external_lights_label_4.setText(_translate("Test_Bench", "Ki"))
        self.external_lights_label_5.setText(_translate("Test_Bench", "Uk"))
        self.external_lights_label_9.setText(_translate("Test_Bench", "Speed Limit"))
        self.controls_label_3.setText(_translate("Test_Bench", "Speed Information"))
        self.external_lights_label_10.setText(_translate("Test_Bench", "Commanded Speed"))
        self.external_lights_label_11.setText(_translate("Test_Bench", "Actual Speed"))
        self.external_lights_label_12.setText(_translate("Test_Bench", "Commanded Power"))
        self.external_lights_label_13.setText(_translate("Test_Bench", "Authority"))
        self.cmd_pwr_label.setText(_translate("Test_Bench", "Commanded Power"))
        self.speed_limit_label.setText(_translate("Test_Bench", "Speed Limit"))
        self.train_line_label.setText(_translate("Test_Bench", "Train Line"))
        self.actual_velocity_label.setText(_translate("Test_Bench", "Actual \n Velocity"))
        #self.underground_label.setText(_translate("Test_Bench", "Underground"))
        self.acc_pwr_label.setText(_translate("Test_Bench", "Actual Power"))
        self.authority_label.setText(_translate("Test_Bench", "Authority"))
        self.ebrake_label_3.setText(_translate("Test_Bench", "Underground"))
        self.ebrake_off_3.setText(_translate("Test_Bench", "NO"))
        self.ebrake_on_3.setText(_translate("Test_Bench", "YES"))
        self.cmd_pwr_label_2.setText(_translate("Test_Bench", "Kp"))
        self.acc_pwr_label_2.setText(_translate("Test_Bench", "Ki"))
        self.ebrake_fail_on_2.setText(_translate("Test_Bench", "ON"))
        self.ebrake_fail_label_2.setText(_translate("Test_Bench", "Automatic Status "))
        self.failure_mode_label_2.setText(_translate("Test_Bench", "Automatic Status"))
        self.ebrake_fail_off_2.setText(_translate("Test_Bench", "OFF"))
        self.pushButton_2.setText(_translate("Test_Bench", "Service Brake"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Test_Bench = QtWidgets.QMainWindow()
    tc = TrainController()
    ui = Ui_Test_Bench(tc)
    ui.setupUi(Test_Bench)
    Test_Bench.show()
    sys.exit(app.exec_())
